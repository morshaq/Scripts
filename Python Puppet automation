#!/usr/bin/env python

import sys
import shutil
from optparse import OptionParser

parser = OptionParser()
parser.add_option("--service_type", dest="service_type")
parser.add_option("--service_name", dest="service_name")
parser.add_option("--module_path", dest="module_path")
parser.add_option("--roll_path", dest="roll_path")
parser.add_option("--artifact_path", dest="artifact_path")
(options,args) = parser.parse_args()

fileconf = "/etc/puppet/fileserver.conf"
module_file_name = options.service_name + ".pp"
#artifact_path= "Staging-morservice-deploy"
#service_type = 'web'
#service_name = "morservice"
#module_path = '/etc/puppet/environments/skytap/modules/deployment_modules/manifests/'
#roll_path = '/etc/puppet/environments/skytap/manifests/roles/'




#adding a raw to the File.Conf
with open(fileconf, "a") as myfile:
    myfile.write("\n[" + module_file_name + "]\n" +options. artifact_path + "\n allow *" )


 # create modul
outfile = open (options.module_path + module_file_name,'wb')

outfile.write('''class %s::%s($%s_services={})
{
  create_resources(general::%s_service, $%s_services)
}
''' % (options.service_name, options.service_name, options.service_name, options.service_type, options.service_name))

outfile.close()

#create roll
outfile = open (options.roll_path + module_file_name,'wb')

outfile.write('''class roles::%s{
        tag '%s'

        include %s::%s
}
''' % (options.service_name, options.service_name, options.service_name, options.service_name))
outfile.close()

